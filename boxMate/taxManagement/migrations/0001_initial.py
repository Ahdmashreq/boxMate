# Generated by Django 2.2.6 on 2021-02-03 11:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('issuer', '0001_initial'),
        ('codes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(blank=True, choices=[('i', 'invoice')], default='i', max_length=2, null=True)),
                ('document_type_version', models.CharField(blank=True, choices=[('1.0', '1.0')], default='1.0', max_length=8, null=True)),
                ('date_time_issued', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('internal_id', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_order_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_order_description', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_order_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('sales_order_description', models.CharField(blank=True, max_length=100, null=True)),
                ('proforma_invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('total_sales_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('total_discount_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('extra_discount_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('total_items_discount_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('issuer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issuer.Issuer')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issuer.Receiver')),
                ('taxpayer_activity_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codes.ActivityType')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('itemType', models.CharField(blank=True, help_text='Must be of GPC format', max_length=50, null=True)),
                ('itemCode', models.CharField(blank=True, help_text='Must be of GS1 code', max_length=50, null=True)),
                ('unitType', models.CharField(blank=True, help_text='A code from unitype table', max_length=50, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('currencySold', models.CharField(blank=True, help_text='Currency code used from ISO 4217.', max_length=10, null=True)),
                ('amountEGP', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('amountSold', models.DecimalField(blank=True, decimal_places=5, help_text='Mandatory if currencySold <> EGP.', max_digits=20, null=True)),
                ('currencyExchangeRate', models.DecimalField(blank=True, decimal_places=5, help_text='Exchange rate of the Egyptian bank on the day of invoicing used to convert currency sold to the value of currency EGP. Mandatory if currencySold is not EGP. Should be valid decimal with max 5 decimal digits.', max_digits=20, null=True)),
                ('salesTotal', models.DecimalField(blank=True, decimal_places=5, help_text='Total amount for the invoice line considering quantity and unit price in EGP (with excluded factory amounts if they are present for specific types in documents).', max_digits=20, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=5, help_text='Total amount for the invoice line after adding all pricing items, taxes, removing discounts.', max_digits=20, null=True)),
                ('valueDifference', models.DecimalField(blank=True, decimal_places=5, help_text='Value difference when selling goods already taxed (accepts +/- numbers), e.g., factory value based.', max_digits=20, null=True)),
                ('totalTaxableFees', models.DecimalField(blank=True, decimal_places=5, help_text='Total amount of additional taxable fees to be used in final tax calculation.', max_digits=20, null=True)),
                ('itemsDiscount', models.DecimalField(blank=True, decimal_places=5, help_text='Non-taxable items discount.', max_digits=20, null=True)),
                ('netTotal', models.DecimalField(blank=True, decimal_places=5, help_text='Total amount for the invoice line after applying discount.', max_digits=20, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, help_text='Optional: discount percentage rate applied. Must be from 0 to 100.', max_digits=5, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=5, help_text='Optional: amount of discount provided to customer for this item. Should be smaller or equal to value Total. If percentage specified should be valid amount calculated from total by applying discount percentage. ', max_digits=20, null=True)),
                ('internalCode', models.CharField(blank=True, help_text='Optional: Internal code used for the product being sold â€“ can be used to simplify references back to existing solution.', max_length=50, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('last_updated_at', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_created_by', to=settings.AUTH_USER_MODEL)),
                ('invoice_header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxManagement.InvoiceHeader')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaxLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('last_updated_at', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_line_created_by', to=settings.AUTH_USER_MODEL)),
                ('invoice_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_lines', to='taxManagement.InvoiceLine')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codes.TaxSubtypes')),
                ('taxType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codes.TaxTypes')),
            ],
        ),
    ]
